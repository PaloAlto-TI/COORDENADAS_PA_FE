{"version":3,"sources":["components/coordenadaList/CoordenadaList.jsx","components/producto/Producto.jsx","components/productList/ProductList.jsx","services/bodegas/BodegaService.js","components/coordenada/Coordenada.jsx","components/bodega/Bodega.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["CoordenadaList","props","cambio","pasar","console","log","useState","state","namesList","seccion","map","name","className","type","label","nombre","badge","productos","length","a","cantidad","reduce","b","toString","onClick","Producto","selectedCountry","setSelectedCountry","value17","setValue17","value1","setValue1","value","options","code","onChange","e","optionLabel","filter","showClear","filterBy","placeholder","valueTemplate","option","itemTemplate","htmlFor","id","onValueChange","showButtons","target","ProductList","products","setProducts","globalFilter","setGlobalFilter","displayResponsive","setDisplayResponsive","dialogFuncMap","onHide","useEffect","Tabletop","init","key","simpleSheet","then","data","t1","find","t2","codigo","header","icon","onInput","selectionMode","paginator","rows","headerStyle","width","field","style","body","rowData","Fragment","sortable","observacion","blockScroll","contentStyle","overflow","visible","breakpoints","footer","autoFocus","height","BodegaService","baseUrl","axios","get","this","res","Coordenada","Bodega","setState","setNombre","setProductos","estado","dimension","x","y","z","coordenadas","bodega","setBodega","bodegaService","getBodega","names","Array","from","_","i","String","fromCharCode","charCodeAt","coordenada","aux","ubicacion","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.55481b98.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"primereact/button\";\r\nimport \"./CoordenadaList.css\";\r\n\r\nconst CoordenadaList = (props) => {\r\n\r\n  const {cambio, pasar} = props;\r\n\r\n  console.log(cambio);\r\n\r\n  const [state, setState] = useState(null);\r\n\r\n  const replace = (nombre, productos) => {\r\n\r\n    pasar(nombre, productos);\r\n  }\r\n\r\n  var names = cambio.seccion\r\n\r\n  var namesList = names.map(function (name) {\r\n    \r\n    return (\r\n\r\n      !state ?\r\n      <div  key={name.nombre} className=\"p-col-5\">\r\n        <Button\r\n          type=\"button\"\r\n          label={name.nombre}\r\n          badge={name.productos.length ? name.productos.map(a => a.cantidad).reduce((a, b) => a + b, 0).toString() : \"0\"}\r\n          onClick={() => replace(name.nombre, name.productos)}\r\n          className=\"p-d-block p-mx-auto\"\r\n        />\r\n      </div> : <p></p>\r\n    );\r\n  });\r\n\r\n  \r\n  return (\r\n    <div className=\"p-p-4\">\r\n    <div className=\"p-grid p-justify-center\">{namesList}</div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoordenadaList;\r\n","import React, { useState } from 'react';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport './Producto.css';\r\n\r\nconst Producto = () => {\r\n\r\n    const [selectedCountry, setSelectedCountry] = useState(null);\r\n    const [value17, setValue17] = useState(20);\r\n    const [value1, setValue1] = useState('');\r\n    const countries = [\r\n        {name: 'Australia', code: 'AU'},\r\n        {name: 'Brazil', code: 'BR'},\r\n        {name: 'China', code: 'CN'},\r\n        {name: 'Egypt', code: 'EG'},\r\n        {name: 'France', code: 'FR'},\r\n        {name: 'Germany', code: 'DE'},\r\n        {name: 'India', code: 'IN'},\r\n        {name: 'Japan', code: 'JP'},\r\n        {name: 'Spain', code: 'ES'},\r\n        {name: 'United States', code: 'US'}\r\n    ];\r\n \r\n\r\n    const onCountryChange = (e) => {\r\n        setSelectedCountry(e.value);\r\n    }\r\n\r\n\r\n    const selectedCountryTemplate = (option, props) => {\r\n        if (option) {\r\n            return (\r\n                <div className=\"country-item country-item-value\">\r\n                    <div>{option.name}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                {props.placeholder}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const countryOptionTemplate = (option) => {\r\n        return (\r\n            <div className=\"country-item\">\r\n                <div>{option.name}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"dropdown-demo\">\r\n            <div className=\"card\">\r\n                <h5>Advanced with Templating, Filtering and Clear Icon</h5>\r\n                <Dropdown className=\"test\" value={selectedCountry} options={countries} onChange={onCountryChange} optionLabel=\"name\" filter showClear filterBy=\"name\" placeholder=\"Select a Country\"\r\n                    valueTemplate={selectedCountryTemplate} itemTemplate={countryOptionTemplate} />\r\n                <br/>\r\n                <div className=\"p-field p-col-12 p-md-3\">\r\n                        <label htmlFor=\"stacked\">Stacked</label>\r\n                        <InputNumber id=\"stacked\" value={value17} onValueChange={(e) => setValue17(e.value)} showButtons />\r\n                </div>\r\n                <br/>\r\n                <h5>Basic</h5>\r\n                <InputText value={value1} onChange={(e) => setValue1(e.target.value)} />\r\n                <span className=\"p-ml-2\">{value1}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Producto;","import React, { useState, useEffect } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport Tabletop from \"tabletop\";\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport Producto from \"../producto/Producto\";\r\nimport { ScrollPanel } from 'primereact/scrollpanel';\r\nimport ProductService from '../../services/products/ProductsService';\r\nimport './ProductList.css';\r\n\r\nconst ProductList = (props) => {\r\n\r\n    const {productos} =props;\r\n    const [products, setProducts] = useState([]);\r\n    const [globalFilter, setGlobalFilter] = useState(null);\r\n\r\n    const [displayResponsive, setDisplayResponsive] = useState(false);\r\n    const [position, setPosition] = useState('center');\r\n\r\n    const dialogFuncMap = {\r\n\r\n        'displayResponsive': setDisplayResponsive\r\n    }\r\n\r\n    const onClick = (name, position) => {\r\n        dialogFuncMap[`${name}`](true);\r\n\r\n        if (position) {\r\n            setPosition(position);\r\n        }\r\n    }\r\n\r\n    const onHide = (name) => {\r\n        dialogFuncMap[`${name}`](false);\r\n    }\r\n  \r\n\r\n    const renderFooter = (name) => {\r\n        return (\r\n            <div>\r\n                <Button label=\"No\" icon=\"pi pi-times\" onClick={() => onHide(name)} className=\"p-button-text\" />\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" onClick={() => onHide(name)} autoFocus />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        Tabletop.init({\r\n             key: \"1ql5KNB3jFHOAdqnZ0whtO2PHqOnTs5J0upieWU3v1L8\",\r\n             simpleSheet: true\r\n         }).then(data => setProducts(productos.map(t1 => ({...t1, ...data.find(t2 => t2.codigo === t1.codigo)}))));\r\n        //setProducts(productos);\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n\r\n    const header = (\r\n        <div className=\"table-header\">\r\n            <Button label=\"Nuevo\" icon=\"pi pi-plus\" className=\"p-mr-2\" onClick={() => setDisplayResponsive(true)}/>\r\n            <Button label=\"Eliminar\" icon=\"pi pi-trash\" className=\"p-button-danger\" />\r\n            <span className=\"p-input-icon-left\">\r\n                <i className=\"pi pi-search\" />\r\n                <InputText type=\"search\" onInput={(e) => setGlobalFilter(e.target.value)} placeholder=\"Buscar...\" />\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n    const codeBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">OBSERVACIÓN</span>\r\n                <br/>\r\n                {rowData.observacion}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const nameBodyTemplate = (rowData) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">CODIGO</span>\r\n                <br/>\r\n                {rowData.codigo}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const categoryBodyTemplate = (rowData) => {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">CANTIDAD</span>\r\n                <br/>\r\n                {rowData.cantidad}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const quantityBodyTemplate = (rowData) => {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <span className=\"p-column-title\">NOMBRE</span>\r\n                <br/>\r\n                {rowData.nombre}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"datatable-responsive-demo\">\r\n            <div className=\"card\">\r\n                <DataTable header={header} selectionMode=\"single\" value={products} className=\"p-datatable-responsive-demo\" paginator rows={10} globalFilter={globalFilter} >\r\n                    <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\r\n                    <Column field=\"codigo\" style={{width:'20%'}} header=\"CÓDIGO\" body={nameBodyTemplate} sortable/>\r\n                    <Column field=\"nombre\" style={{width:'30%'}} header=\"NOMBRE\" body={quantityBodyTemplate} sortable />\r\n                    <Column field=\"cantidad\" style={{width:'20%'}} header=\"CANTIDAD\" body={categoryBodyTemplate} sortable />\r\n                    <Column field=\"observacion\" style={{width:'25%'}} header=\"OBSERVACIÓN\" body={codeBodyTemplate} sortable />\r\n\r\n                </DataTable>\r\n                <Dialog blockScroll={true} contentStyle={{overflow:\"visible\"}} header=\"Header\" visible={displayResponsive} onHide={() => onHide('displayResponsive')} breakpoints={{'960px': '75vw'}} style={{width: '50vw'}} footer={renderFooter('displayResponsive')} >\r\n                    <ScrollPanel style={{ width: '100%', height: '300px' }} >\r\n                        <Producto/>    \r\n                    </ScrollPanel>\r\n\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductList;","import axios from 'axios';\r\n\r\nexport default class BodegaService {\r\n\r\n    // getProductsSmall() {\r\n    //     return axios.get('products-small.json').then(res => res.data.data);\r\n    // }\r\n    //baseUrl = \"http://localhost:8080/bodega\";\r\n    baseUrl = \"https://distribucion-inventario.herokuapp.com//bodega\";\r\n\r\n\r\n    getBodega() {\r\n        return axios.get(this.baseUrl +'s/6081d0262705134414ea1b7c').then(res => res.data);\r\n    }\r\n\r\n    // getProductsWithOrdersSmall() {\r\n    //     return axios.get('products-orders-small.json').then(res => res.data.data);\r\n    // }\r\n}","import React from 'react'\r\nimport { Panel } from 'primereact/panel';\r\nimport ProductList from '../productList/ProductList';\r\nimport \"./Coordenada.css\";\r\n\r\nconst Coordenada  = (props) => {\r\n\r\n    const {nombre, productos} = props;\r\n\r\n    console.log(props)\r\n\r\n    return (\r\n        <div>\r\n        <Panel header=\"NOMBRE DE LA COORDENADA\">\r\n        <p>{nombre}</p>\r\n        </Panel>\r\n        <Panel header=\"CONTENIDO\">\r\n        <ProductList productos={productos}></ProductList>\r\n        </Panel>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Coordenada;","import React, { useEffect, useState } from \"react\";\r\nimport { TabView, TabPanel } from \"primereact/tabview\";\r\nimport CoordenadaList from \"../coordenadaList/CoordenadaList\";\r\nimport BodegaService from \"../../services/bodegas/BodegaService\";\r\nimport \"./Bodega.css\";\r\nimport ProductList from \"../productList/ProductList\";\r\nimport Coordenada from \"../coordenada/Coordenada\";\r\nimport { Button } from 'primereact/button'; \r\nconst Bodega = () => {\r\n\r\n  const [state, setState] = useState(null)\r\n  const [nombre, setNombre] = useState(null)\r\n  const [productos, setProductos] = useState([])\r\n\r\n\r\n  const [bodega, setBodega] = useState({\r\n    id:\"\",\r\n    codigo:\"\",\r\n    nombre:\"\",\r\n    estado:0,\r\n    dimension:{\r\n      x:0,\r\n      y:0,\r\n      z:0\r\n    },\r\n    coordenadas:[]\r\n  })\r\n\r\n  const bodegaService = new BodegaService();\r\n\r\n  \r\n\r\n\r\n\r\n  const pasar = (nombre, productos) => {\r\n\r\n    console.log('p',productos);\r\n    setProductos(productos)\r\n    setNombre(nombre)\r\n    setState(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    bodegaService.getBodega().then((data) => setBodega(data) )\r\n  }, []);\r\n\r\n\r\n\r\n  var names = []\r\n\r\n\r\n  if (bodega.dimension){\r\n    names = Array.from({ length: bodega.dimension.z }, (_, i) => String.fromCharCode('A'.charCodeAt(0) + i));\r\n  }\r\n\r\n\r\n  var namesList = bodega.coordenadas.map(function (coordenada) {\r\n    \r\n    var aux = names[coordenada.seccion[0].ubicacion.z]\r\n    \r\n    return (\r\n\r\n      \r\n      <TabPanel key={aux} header={aux}>\r\n      <CoordenadaList cambio={coordenada} pasar={pasar} />\r\n      </TabPanel>\r\n     \r\n    );\r\n  });\r\n\r\n  // var namesList = names.map(function (name) {\r\n        \r\n  //   return (\r\n\r\n      \r\n  //     <TabPanel key={name} header={name}>\r\n  //     <CoordenadaList cambio={name} pasar={pasar} />\r\n  //     </TabPanel>\r\n     \r\n  //   );\r\n  // });\r\n\r\n  return (\r\n    <div className=\"p-d-flex p-jc-center\">\r\n      <div className=\"tabview-demo\">\r\n        <div className=\"card\">\r\n        <Button className=\"test\" icon=\"pi pi-arrow-left\" className=\"p-button-rounded p-button-secondary\" onClick={()=>setNombre(null)} />\r\n\r\n          { !nombre?\r\n          \r\n          <TabView>\r\n            {namesList}\r\n          </TabView>:<Coordenada nombre={nombre} productos={productos}/> \r\n        }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bodega;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport CoordenadaList from \"./components/coordenadaList/CoordenadaList\";\nimport 'primeflex/primeflex.css';\nimport ProductList from \"./components/productList/ProductList\";\nimport Bodega from \"./components/bodega/Bodega\";\nimport Login from \"./components/login/Login\";\nimport Producto from \"./components/producto/Producto\";\nimport Coordenada from \"./components/coordenada/Coordenada\";\n\nfunction App() {\n  return <div className=\"App\">\n\n      {/* <Login></Login> */}\n      {/* <Home></Home> */}\n      <Bodega></Bodega>\n      {/* <Coordenada></Coordenada> */}\n      {/* <ProductList></ProductList> */}\n      {/* <Producto></Producto> */}\n      {/* <CoordenadaList></CoordenadaList> */}\n  </div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}